// -----------------------------------------------------------------------------
// This file contains Sass mixins.
// -----------------------------------------------------------------------------

// ==========================================================================
// Clearfix
// ==========================================================================
%clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

/*
	Description:
	Set a rem font size with pixel fallback
	Useage:
	element{
		@include font-size(16px)
	}
*/
@mixin font-size($font-size){
    font-size:$font-size;
    font-size:($font-size / $font-size-root)*1rem;
}


/*
	Description:
	Set placeholder color to inputs
	Useage:
	element{
		@placeholder-color(#cccccc)
	}
*/
@mixin placeholder-color($color){

    &::-webkit-input-placeholder { /* Chrome/Opera/Safari */
      color: $color;
    }
    &::-moz-placeholder { /* Firefox 19+ */
      color: $color;
    }
    &:-ms-input-placeholder { /* IE 10+ */
      color: $color;
    }
    &:-moz-placeholder { /* Firefox 18- */
      color: $color;
    }

}


/*
	Description:
	Prefix Animations and keyframes
	Useage:
	@include keyframes(fade-out) {
	  	0% { opacity: 1; }
	  	100% { opacity: 0; }
	}
	element{
	 	@include animation('5s fade-out 3');
	}
*/
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
  	-webkit-animation: #{$str};
 	-moz-animation: #{$str};
  	-ms-animation: #{$str};
  	-o-animation: #{$str};
  	animation: #{$str};
}


/*
    Mixin transition prefix

*/
@mixin transition($str) {
  	-webkit-transition: #{$str};
 	-moz-transition: #{$str};
  	-ms-transition: #{$str};
  	-o-transition: #{$str};
  	transition: #{$str};
}

/*
    Mixin transfrorm
*/
@mixin transform($str) {
  	-webkit-transform: #{$str};
 	  -moz-transform: #{$str};
  	-ms-transform: #{$str};
  	-o-transform: #{$str};
  	transform: #{$str};
}


/*
	Description:
	Vendor-prefixed CSS
	from https://github.com/HugoGiraudel/sass-boilerplate
	Useage:
	@include vendor(border-radius, 4px);
*/
@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
            #{$property}:$value;
}


/*
	Description:
	Cross browser opacity
	Useage:
	@include opacity(0.8);
*/
@mixin opacity($opacity) {
  	opacity: $opacity;
  	$opacity-ie: $opacity * 100;
  	filter: alpha(opacity=$opacity-ie); //IE8
}


/*
    Vertical align direct child
*/
@mixin vertical-align($align: middle) {
  &:before {
    content: "";
    display: inline-block;
    height: 100%;
    vertical-align: $align;
  }
  & > * {
    vertical-align: $align;
  }
}


/*
    Equal columns with flebox
*/
@mixin eqcols() {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    overflow: hidden;
    -js-display: flex;
    & > .fcol {
        flex: 1;
    }
}


// ==========================================================================
// Slideshow
// ==========================================================================
@mixin slideshow($settings) {
  $images     : map-get($settings, images);
  $duration   : map-get($settings, duration);
  $transition : map-get($settings, transition);
  $easing     : map-get($settings, easing);
  $repeat     : map-get($settings, repeat);

  // total duration (in seconds)
  $totalDuration      : $images * $duration;
  $animationSettings  : CSS3slideshow #{$totalDuration} #{$easing} 0s #{$repeat};
  $vendorsList        : (-webkit-, -moz-, -o-, '');

  position   : relative;
  cursor     : pointer;
  list-style : none;

  li {
      position : absolute;
      z-index  : $images;
      top      : 0;
      left     : 0;
      @each $vendor in $vendorsList {
          #{$vendor}animation: #{$animationSettings};
      }

      @for $i from 2 through $images {

          &:nth-child(#{$i}) {
              z-index: #{$images - $i + 1};
              @each $vendor in $vendorsList {
                  #{$vendor}animation-delay: #{$duration * ($i - 1)};
              }
          }

      }
  }


  @at-root {

      $endEffect: 100% / $images;
      $timeEffect: round(($transition * 100% / $totalDuration) * 100)/100;
      $startEffect: $endEffect - $timeEffect;

      @include setKeyframes(CSS3slideshow) {
        #{$startEffect}, 100% { opacity: 1; }
        #{$endEffect}, #{100% - $timeEffect} { opacity: 0; }
      }

  }

}


@mixin setKeyframes($animationName) {

  @-webkit-keyframes #{$animationName} { @content; }
  @-moz-keyframes #{$animationName}    { @content; }
  @-o-keyframes #{$animationName}      { @content; }
  @keyframes #{$animationName}         { @content; }

}
